replicaCount: 1

image:
  repository: lightstep/collector
  tag: latest
  pullPolicy: IfNotPresent

labels:
    common:
      stack: tracing

lightstep:
  collector:
    pool: ''
    key:
    reporter:
      bytesPerProject: "1000000000"

traefik:
  # @TODO - Deploy traefik as a part of this chart
  ingress:
    enabled: false
  ingressRoute:
    enabled: true
    pathPrefix: /
  middlewares:
    retry:
      attempts: 0

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

resources:
  limits:
    cpu: 2
    memory: "16Gi"
  requests:
    cpu: "500m"
    memory: "8Gi"

# HorizontalPodAutoscaler
hpa:
  enabled: true
  minReplicas: 1
  maxReplicas: 1

  # PR #18965 reverts the previous pull request since the behavior object is functionality targeted in 1.18, not 1.17.
  # behavior:
  #   scaleDown:
  #     stabilizationWindowSeconds: 300
  #     policies:
  #     # scale down n pod(s) every n seconds
  #     - type: Pods
  #       value: 1
  #       periodSeconds: 60
  #   scaleUp:
  #     stabilizationWindowSeconds: 60
  #     policies:
  #     # scale up n pod(s) every n seconds
  #     - type: Pods
  #       value: 1
  #       periodSeconds: 30
  #     selectPolicy: Max

  cpu:
    averageUtilization: 80
  memory:
    targetAverageValue: 100Mi

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000



service:
  type: ClusterIP

  # enable diagnostics endpoint
  diagnostics:
    enabled: true

  # enable admin endpoint (used for healthchecks)
  admin:
    enabled: true
    port: 8180

  collector:
    #COLLECTOR_HTTP_PLAIN_PORT,  Unsecure traffic, or secure traffic that terminates it's secure status before it hits the satellite
    insecure:
      enabled: true

    #COLLECTOR_HTTP_SECURE_PORT, for Secure traffic
    secure:
      enabled: false


ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

nodeSelector: {}
tolerations: []
affinity: {}


podDisruptionBudget:
  minAvailable: "1"

priorityClassName: ""

# default is to kill the container if it's not alive after 30s
livenessProbe:
  initialDelaySeconds: 1
  failureThreshold: 6 # failureThreshold * periodSeconds = killTime
  periodSeconds: 5

# default is to kill the container if it's not ready after 15s
readinessProbe:
  initialDelaySeconds: 1
  failureThreshold: 3 # failureThreshold * periodSeconds = killTime
  periodSeconds: 5
